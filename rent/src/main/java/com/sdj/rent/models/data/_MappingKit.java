package com.sdj.rent.models.data;

import com.jfinal.plugin.activerecord.ActiveRecordPlugin;

/**
 * Generated by JFinal, do not modify this file.
 * <pre>
 * Example:
 * public void configPlugin(Plugins me) {
 *     ActiveRecordPlugin arp = new ActiveRecordPlugin(...);
 *     _MappingKit.mapping(arp);
 *     me.add(arp);
 * }
 * </pre>
 */
public class _MappingKit {

	public static void mapping(ActiveRecordPlugin arp) {
		arp.addMapping("bank_offer", "id", BankOffer.class);
		arp.addMapping("car_attachment", "id", CarAttachment.class);
		arp.addMapping("car_card", "id", CarCard.class);
		arp.addMapping("car_garage", "id", CarGarage.class);
		arp.addMapping("car_in_out", "id", CarInOut.class);
		arp.addMapping("car_pay_record", "id", CarPayRecord.class);
		arp.addMapping("car_position", "id", CarPosition.class);
		arp.addMapping("charge_detail", "detail_id", ChargeDetail.class);
		arp.addMapping("charge_step", "charge_step_id", ChargeStep.class);
		arp.addMapping("charge_trade_detail", "trade_no", ChargeTradeDetail.class);
		// Composite Primary Key order: contract_id,owner_id,room_id
		arp.addMapping("contract_room", "contract_id,owner_id,room_id", ContractRoom.class);
		arp.addMapping("fin_bank_account", "bank_account_id", FinBankAccount.class);
		arp.addMapping("fin_journal", "journal", FinJournal.class);
		arp.addMapping("fin_laundry_list", "laundry_id", FinLaundryList.class);
		arp.addMapping("fin_pay_record", "record_id", FinPayRecord.class);
		arp.addMapping("fin_prepaid_account", "id", FinPrepaidAccount.class);
		arp.addMapping("fin_prepay_charge", "id", FinPrepayCharge.class);
		arp.addMapping("fin_recharge_record", "recharge_record_id", FinRechargeRecord.class);
		// Composite Primary Key order: id,sub_no
		arp.addMapping("fin_subject", "id,sub_no", FinSubject.class);
		arp.addMapping("fin_trade_detail", "trade_no", FinTradeDetail.class);
		arp.addMapping("fin_trade_overdue", "trade_overdue_id", FinTradeOverdue.class);
		arp.addMapping("fin_trade_record", "trade_record_id", FinTradeRecord.class);
		// Composite Primary Key order: ext_type,owner_id,pro_id,room_id,trade_batch_no
		arp.addMapping("fin_trade_summary", "ext_type,owner_id,pro_id,room_id,trade_batch_no", FinTradeSummary.class);
		arp.addMapping("incur_expense", "incur_id", IncurExpense.class);
		arp.addMapping("log_operation", "log_id", LogOperation.class);
		// Composite Primary Key order: detail_id,exec_ym,is_update_amount
		arp.addMapping("log_task_detail", "detail_id,exec_ym,is_update_amount", LogTaskDetail.class);
		arp.addMapping("meter_record", "record_id", MeterRecord.class);
		arp.addMapping("ms_crdbin_inf", "id", MsCrdbinInf.class);
		arp.addMapping("opt_config", "config_id", OptConfig.class);
		arp.addMapping("opt_merchant", "pro_id", OptMerchant.class);
		arp.addMapping("order_refund", "fefund_id", OrderRefund.class);
		arp.addMapping("order_refund_detail", "refund_detail_id", OrderRefundDetail.class);
		arp.addMapping("pro_charge", "charge_id", ProCharge.class);
		arp.addMapping("pro_contract", "contract_id", ProContract.class);
		arp.addMapping("pro_department", "id", ProDepartment.class);
		arp.addMapping("pro_employee", "id", ProEmployee.class);
		arp.addMapping("pro_guestbase", "owner_id", ProGuestbase.class);
		arp.addMapping("pro_guestextend", "owner_id", ProGuestextend.class);
		arp.addMapping("pro_house", "house_id", ProHouse.class);
		arp.addMapping("pro_management", "manage_id", ProManagement.class);
		arp.addMapping("pro_member", "id", ProMember.class);
		arp.addMapping("pro_meter", "meter_id", ProMeter.class);
		arp.addMapping("pro_metertype", "meter_type_id", ProMetertype.class);
		arp.addMapping("pro_room", "room_id", ProRoom.class);
		arp.addMapping("pro_room_deposit", "room_deposit_id", ProRoomDeposit.class);
		// Composite Primary Key order: charge_id,detail_id,house_id,manage_id,room_id
		arp.addMapping("room_charge", "charge_id,detail_id,house_id,manage_id,room_id", RoomCharge.class);
		arp.addMapping("room_guest", "id", RoomGuest.class);
		arp.addMapping("room_history", "room_history_id", RoomHistory.class);
		arp.addMapping("room_rent_update", "room_rent_update_id", RoomRentUpdate.class);
		arp.addMapping("service_order", "id", ServiceOrder.class);
		// Composite Primary Key order: house_id,management_id
		arp.addMapping("share_house_setting", "house_id,management_id", ShareHouseSetting.class);
		// Composite Primary Key order: batch_no,manage_id
		arp.addMapping("share_record", "batch_no,manage_id", ShareRecord.class);
		arp.addMapping("share_room", "share_room_id", ShareRoom.class);
		arp.addMapping("share_rule", "share_rule_id", ShareRule.class);
		// Composite Primary Key order: management_id,share_rule_id
		arp.addMapping("share_rule_management", "management_id,share_rule_id", ShareRuleManagement.class);
		// Composite Primary Key order: meter_id,share_rule_id
		arp.addMapping("share_rule_meter", "meter_id,share_rule_id", ShareRuleMeter.class);
		arp.addMapping("sms_record", "sms_record_id", SmsRecord.class);
		arp.addMapping("sms_template", "sms_id", SmsTemplate.class);
		arp.addMapping("sys_chart", "chart_id", SysChart.class);
		arp.addMapping("sys_contract_template", "contract_template_id", SysContractTemplate.class);
		arp.addMapping("sys_notice", "notice_id", SysNotice.class);
		arp.addMapping("sys_payment", "payment_id", SysPayment.class);
		arp.addMapping("sys_rec_menu", "rec_id", SysRecMenu.class);
		arp.addMapping("sys_role", "role_id", SysRole.class);
		arp.addMapping("sys_role_menu", "role_menu_id", SysRoleMenu.class);
		arp.addMapping("sys_role_menu_fn", "role_menu_id", SysRoleMenuFn.class);
		arp.addMapping("sys_role_user", "role_user_id", SysRoleUser.class);
		arp.addMapping("sys_sequence", "id", SysSequence.class);
		arp.addMapping("sys_user", "user_id", SysUser.class);
		arp.addMapping("variable", "id", Variable.class);
		arp.addMapping("water_elec_rac", "id", WaterElecRac.class);
		arp.addMapping("water_elec_record", "id", WaterElecRecord.class);
	}
}

